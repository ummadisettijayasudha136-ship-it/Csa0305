#include <stdio.h>
#include <stdlib.h>

struct Node { int data; struct Node* left; struct Node* right; };

struct Node* newNode(int data) {
    struct Node* n = (struct Node*)malloc(sizeof(struct Node));
    n->data=data; n->left=n->right=NULL; return n;
}

struct Node* insert(struct Node* root,int data){
    if(!root) return newNode(data);
    if(data<root->data) root->left=insert(root->left,data);
    else root->right=insert(root->right,data);
    return root;
}

struct Node* search(struct Node* root,int key){
    if(!root || root->data==key) return root;
    if(key<root->data) return search(root->left,key);
    return search(root->right,key);
}

int minValue(struct Node* root){ while(root->left) root=root->left; return root->data; }
int maxValue(struct Node* root){ while(root->right) root=root->right; return root->data; }

int main() {
    struct Node* root=NULL;
    root=insert(root,50); root=insert(root,30); root=insert(root,70);
    root=insert(root,20); root=insert(root,40); root=insert(root,60); root=insert(root,80);

    int key=40;
    if(search(root,key)) printf("Found %d\n",key); else printf("Not Found\n");
    printf("Min = %d\n",minValue(root));
    printf("Max = %d\n",maxValue(root));
    return 0;
}
